csg

player p1 Watchkeeping_Officer endplayer

player p2 Duty_Officer endplayer

player p3 Captain endplayer

player p5 Crew_B endplayer


//Global variables for player Watchkeeping_Officer

const double ProbW_1=0.0224;
const double ProbW_2=0.0629;
const double ProbW_3=0.0396;
//Global variables for player Duty_Officer
const double ProbD_5=0.0363;
const double ProbD_1=0.0336;
const double ProbD_2=0.0245;
const double ProbD_3=0.0223;
const double ProbD_4=0.0108;
//Global variables for player Captain
const double ProbA_4=0.000401;
const double ProbA_1=0.0175;
const double ProbA_2=0.0228;
const double ProbA_3=0.00174;
//Global variables for player Crew_A
const double ProbCA_15=0.00401;
const double ProbCA_1=0.00711;
const double ProbCA_2=0.0123;
const double ProbCA_3=0.015;
const double ProbCA_4=0.0982;
const double ProbCA_5=0.0156;
const double ProbCA_6=0.0104;
const double ProbCA_7=0.0104;
const double ProbCA_8=0.0156;
const double ProbCA_9=0.0104;
const double ProbCA_10=0.0129;
const double ProbCA_11=0.0129;
const double ProbCA_12=0.0103;
const double ProbCA_13=0.0104;
const double ProbCA_14=0.00320;
//Global variables for player Crew_B
const double ProbCB_1=0.0157;
const double ProbCB_2=0.0157;
const double ProbCB_3=0.0181;

const double ProbCB_4=0.0059;
const double ProbCB_5=0.0219;
const double ProbCB_6=0.285;
const double ProbCB_7=0;
const double ProbCB_8=0.226;

const double ProbCB_9=0.00320;
const double ProbCB_10=0.00401;
//Global variables for player Crew_C
const double ProbCC_1=0.0147;
const double ProbCC_2=0.0146;

const double ProbCC_3=0.0059;
const double ProbCC_4=0.0219;
const double ProbCC_5=0.285;
const double ProbCC_6=0;
const double ProbCC_7=0.226;

const double ProbCC_8=0.00320;
const double ProbCC_9=0.00401;
//Global variables for player Crew_D
const double ProbCD_6=0.00401;
const double ProbCD_1=0.00906;
const double ProbCD_2=0.006;
const double ProbCD_3=0.0143;
const double ProbCD_4=0.00773;
const double ProbCD_5=0.00320;
//Global variables for player Chief_Officer
const double ProbC_2=0.00312;
const double ProbC_1=0.0105;

const int Wing_Bridge=0;
const int Navigation_Bridge=1;
const int Cabin_Room=2;
const int Boat_Deck=3;
const int Rescue_Boat=4;
const int MAX_POSITION = 5;
const int NOT_DEFINED = -1;


const k; // number of rounds

// module to count the rounds
module rounds

	rounds : [0..k+1];
	
	[] rounds<=k -> (rounds'=rounds+1);
	[] rounds=k+1 -> true;

endmodule


module Watchkeeping_Officer
    W_P: [0..MAX_POSITION] init Wing_Bridge; 
    W_1: [1..3] init 1;
  [a_W_1] W_1 = 1 & W_P = Wing_Bridge      ->  (1 - ProbW_1):(W_1' = 2) & (W_P' = Wing_Bridge)      + ProbW_1:(W_1' = 1);
  [a_W_2] W_1 = 2 & W_P = Wing_Bridge      ->  (1 - ProbW_2):(W_1' = 3) & (W_P' = Navigation_Bridge)+ ProbW_2:(W_1' = 2);
  [a_W_3] W_1 = 3 & W_P = Navigation_Bridge->  (1 - ProbW_3):(W_1' = 1) & (W_P' = Wing_Bridge)      + ProbW_3:(W_1' = 3);
endmodule 

module scheduler1
  
  [a_W_3,a_D_0] W_1 = 3 & W_P = Navigation_Bridge & D_P = Navigation_Bridge->true;

endmodule



module Duty_Officer
    D_P: [0..MAX_POSITION] init Navigation_Bridge; 
    D_1: [0..6] init 1;
  [a_D_0] W_1 = 3 & W_P = Navigation_Bridge  -> (D_1' = 1);
  [a_D_1] D_1 = 1 & D_P = Navigation_Bridge-> (1 - ProbD_1):(D_1' = 2) & (D_P' = Navigation_Bridge)+ ProbD_1:(D_1' = 1);
  [a_D_2] D_1 = 2 & D_P = Navigation_Bridge-> (1 - ProbD_2):(D_1' = 3) & (D_P' = Navigation_Bridge)+ ProbD_2:(D_1' = 2);
  [a_D_3] D_1 = 3 & D_P = Navigation_Bridge-> (1 - ProbD_3):(D_1' = 4) & (D_P' = Navigation_Bridge)+ ProbD_3:(D_1' = 3);
  [a_D_4] D_1 = 4 & D_P = Navigation_Bridge-> (1 - ProbD_4):(D_1' = 5) & (D_P' = Navigation_Bridge)+ ProbD_4:(D_1' = 4);
  [a_D_5] D_1 = 5 & D_P = Navigation_Bridge-> (1 - ProbD_5):(D_1' = 0) & (D_P' = Navigation_Bridge)+ ProbD_5:(D_1' = 5);
endmodule 

module scheduler2
  [a_D_3, a_A_0] D_1 = 3 & D_P = Navigation_Bridge-> true;
endmodule

module Captain
    A_P: [0..MAX_POSITION] init Cabin_Room; 
    A_1: [0..5] init 1; 
  [a_A_0] D_1 = 3 & D_P = Navigation_Bridge = true 		       -> (A_1' = 1);
  [a_A_1] A_1 = 1 & A_P = Cabin_Room       -> (1 - ProbA_1):(A_1' = 2) & (A_P' = Cabin_Room)       + ProbA_1:(A_1' = 1);
  [a_A_2] A_1 = 2 & A_P = Cabin_Room       -> (1 - ProbA_2):(A_1' = 3) & (A_P' = Cabin_Room)       + ProbA_2:(A_1' = 2);
  [a_A_3] A_1 = 3 & A_P = Cabin_Room       -> (1 - ProbA_3):(A_1' = 4) & (A_P' = Navigation_Bridge)+ ProbA_3:(A_1' = 3);
  [a_A_4] A_1 = 4 & A_P = Navigation_Bridge->  (1 - ProbA_4):(A_1' = 0) & (A_P' = Cabin_Room)      + ProbA_4:(A_1' = 4);
endmodule 

module scheduler3
  [a_D_4, a_CB_0] D_1 = 4 & D_P = Navigation_Bridge -> true;
endmodule

module Crew_B
    CB_P: [0..MAX_POSITION] init Boat_Deck; 
    CB_1: [0..11] init 1;
  [a_CB_0] D_1 = 4 & D_P = Navigation_Bridge -> (CB_1' = 1);
  [a_CB_1] CB_1 = 1 & CB_P = Boat_Deck  -> (1 - ProbCB_1):(CB_1' = 2) & (CB_P' = Rescue_Boat)+ ProbCB_1:(CB_1' = 1);
  [a_CB_2] CB_1 = 2 & CB_P = Rescue_Boat-> (1 - ProbCB_2):(CB_1' = 3) & (CB_P' = Rescue_Boat)+ ProbCB_2:(CB_1' = 2);
  [a_CB_3] CB_1 = 3 & CB_P = Rescue_Boat-> (1 - ProbCB_3):(CB_1' = 4) & (CB_P' = Rescue_Boat)+ ProbCB_3:(CB_1' = 3);
  [a_CB_4] CB_1 = 4 & CB_P = Rescue_Boat-> (1 - ProbCB_4):(CB_1' = 5) & (CB_P' = Rescue_Boat)+ ProbCB_4:(CB_1' = 4);

  [a_CB_5] CB_1 = 5 & CB_P = Rescue_Boat-> (1 - ProbCB_5):(CB_1' = 6) & (CB_P' = Rescue_Boat)+ ProbCB_5:(CB_1' = 5);
  [a_CB_6] CB_1 = 6 & CB_P = Rescue_Boat-> (1 - ProbCB_6):(CB_1' = 7) & (CB_P' = Rescue_Boat)+ ProbCB_6:(CB_1' = 6);
  [a_CB_7] CB_1 = 7 & CB_P = Rescue_Boat-> (1 - ProbCB_7):(CB_1' = 8) & (CB_P' = Rescue_Boat)+ ProbCB_7:(CB_1' = 7);
  [a_CB_8] CB_1 = 8 & CB_P = Rescue_Boat-> (1 - ProbCB_8):(CB_1' = 9) & (CB_P' = Rescue_Boat)+ ProbCB_8:(CB_1' = 8);
  [a_CB_9] CB_1 = 9 & CB_P = Rescue_Boat-> (1 - ProbCB_9):(CB_1' = 10) & (CB_P' = Rescue_Boat)+ ProbCB_9:(CB_1' = 9);

  [a_CB_10] CB_1 = 10 & CB_P = Rescue_Boat-> (1 - ProbCB_10):(CB_1' = 0) & (CB_P' = Boat_Deck)+ ProbCB_10:(CB_1' = 10);
endmodule 


rewards "cost"
  [a_W_3,a_D_0]  true: 1;
  [a_D_3, a_A_0]  true		   : 1;
  [a_D_4, a_CB_0] true		   : 1;
endrewards

